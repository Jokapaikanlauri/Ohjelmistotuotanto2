@page "/trips"
@using MatkakertomusGroupB.Shared.Models;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MatkakertomusGroupB.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider asp
@inject ILogger<Destinations> logger

<PageTitle>My trips</PageTitle>

<AuthorizeView>
	<Authorized>
		<h1>My trips</h1>
		<div id="owntrips-razor" class="left">
			@if (userId != null)
			{
				<OwnTripList id=@userId />
			}
		</div>
		<div class="right">
			<OwnTripAdd id="@userId" />
		</div>
	</Authorized>
	<NotAuthorized>
		<div>You are a public user.</div>
	</NotAuthorized>
</AuthorizeView>

@code {

	public UserDTO? userNickDTO = new UserDTO();
	public string? nickname = null;

	public string? name = null;
	public string? userId = null;

	protected override async Task OnInitializedAsync()
	{
		//Assing name to DTO for POST operation
		name = asp.GetAuthenticationStateAsync().Result.User.Identity.Name;
		userNickDTO.Username = name;

		//Fetch user data from API via POST operation
		var response = await Http.PostAsJsonAsync<UserDTO>($"/api/traveller/nick", userNickDTO);

		//Parse user data from API
		userNickDTO = await response.Content.ReadFromJsonAsync<UserDTO>();
		nickname = userNickDTO.Nickname;

		if (name != null)
		{
			//Fetch user data from API via POST operation
			var res = await Http.PostAsJsonAsync<UserDTO>($"/api/traveller/id", new UserDTO(name));
			//Parse user data from API
			var userDTO = await res.Content.ReadFromJsonAsync<UserDTO>();
			userId = userDTO.Id;
		}
	}
}
