@using MatkakertomusGroupB.Shared;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MatkakertomusGroupB.Shared.Models
@inject NavigationManager Navigation
@inject ILogger<LoginDisplay> logger
@inject HttpClient Http
@inject AuthenticationStateProvider asp

<div id="LoginDisplay-razor">
<AuthorizeView>
	<Authorized>
		@{
			logger.LogInformation("User is Authorized to page");
		}
		@if (nickname != null)
		{

			<a id="nick-display" href="authentication/profile"><span class="oi oi-cog" aria-hidden="true"></span> Hello @nickname</a>
		}
		else
		{
			<span>Loading...</span>
			GetUserNick();
		}
		
		<button id="logout_button" class="nav-link btn btn-link" @onclick="BeginLogOut"><span class="oi oi-account-logout" aria-hidden="true"></span> Log out</button>
	</Authorized>
	<NotAuthorized>
		<a href="authentication/register"><span class="oi oi-pencil" aria-hidden="true"></span> Register</a>
		<a href="authentication/login"> <span class="oi oi-account-login" aria-hidden="true"></span> Log in</a>
	</NotAuthorized>
</AuthorizeView>
</div>

@code {
	private string? nickname = null;

	private async void GetUserNick()
	{
		try
		{
			//Assing name to variable for future operations
			var name = asp.GetAuthenticationStateAsync().Result.User.Identity.Name;
			if (name != null)
			{
				//Fetch user data from API via POST operation
				var response = await Http.PostAsJsonAsync<UserDTO>($"/api/traveller/nick", new UserDTO(name));
				//Parse user data from API
				var userDTO = await response.Content.ReadFromJsonAsync<UserDTO>();
				nickname = userDTO.Nickname;
				if (nickname != null)
				{
					StateHasChanged();
				}
			}
		}
		catch (Exception ex)
		{
			logger.LogWarning(ex.ToString());
		}
	}

	private void BeginLogOut()
	{
		Navigation.NavigateToLogout("authentication/logout");
	}
}
