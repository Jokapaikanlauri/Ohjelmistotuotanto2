@using MatkakertomusGroupB.Client.Pages;
@using MatkakertomusGroupB.Shared.Models;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MatkakertomusGroupB.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider asp
@inject NavigationManager nav


<div>
	<div class="addHeader">
		<h4>Lisää uusi matka</h4>
	</div>
	<div id="trip-razor-add" class="addDetails">
		<NewTrip>
			<EditForm Model="@tDTO" OnValidSubmit="@Save">
				<DataAnnotationsValidator />
				<ValidationSummary />
				<label>Alkupäivämäärä:</label>
				<br />
				<InputDate id="Input_Trip_StartDate" @bind-Value="tDTO.DatumStart" onchange="@DateCheck()" />
				<br /> <br />
				<label>Loppupäivämäärä:</label>
				<br />
				<InputDate id="Input_Trip_EndDate" @bind-Value="tDTO.DatumEnd" onchange="@DateCheck()" />
				<br /> <br />
				<label>Rastita jos yksityinen: </label>
				<InputCheckbox id="Input_Trip_Private" @bind-Value="tDTO.Private" />
				<br /><br />
				@if (!DateCheck())
				{
					<p>Tarkista päivämäärät!</p>
				}
				else
				{
					<button id="addSubmit" type="submit" class="btn btn-success">
						<span class="oi oi-plus" aria-hidden="true"> Lisää matka</span>
					</button>
				}
			</EditForm>
		</NewTrip>
	</div>
	<br />
	@if (added)
	{
		<div id="trip-added-alert" class="alert alert-success fade-in" role="alert">
			Uusi matka lisätty onnistuneesti!
		</div>
	}
	@if (failed)
	{
		<div id="trip-added-alert" class="alert alert-danger fade-in" role="alert">
			Odottamaton virhe lisätessä matkaa.
		</div>
	}
</div>

@code {
	[Parameter]
	public string? UserId { get; set; }
	[Parameter]
	public Action RefreshParent { get; set; }

	public TripDTO tDTO = new TripDTO();
	public bool added = false;
	public bool failed = false;

	async Task Save()
	{
		// reset error message
		added = failed = false;

		tDTO.TravellerId = UserId;
		//post a new trip
		var res = await Http.PostAsJsonAsync<TripDTO>($"/api/trip", tDTO);
		if (res.IsSuccessStatusCode)
		{
			added = true;
			Console.WriteLine(res);

			RefreshParent?.Invoke();
		}
		else
		{
			failed = true;
			Console.WriteLine(res);
		}
	}

	// check that the dates are input correctly to show or hide add button
	bool DateCheck()
	{
		if (tDTO.DatumEnd != null && tDTO.DatumStart != null)
		{
			if (tDTO.DatumEnd >= tDTO.DatumStart) return true;
			else return false;
		}
		else return false;
	}
}
