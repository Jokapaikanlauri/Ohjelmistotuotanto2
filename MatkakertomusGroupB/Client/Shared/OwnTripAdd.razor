@using MatkakertomusGroupB.Shared.Models;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MatkakertomusGroupB.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider asp
@inject NavigationManager nav

<div class="right">
    <h4>Add new trip</h4>
    <br />
    <NewTrip>
        <EditForm Model="@tDTO" OnValidSubmit="@Save">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <label>Start date:</label>
            <br />
            <InputDate @bind-Value="tDTO.DatumStart" />
            <br /> <br />
            <label>End date:</label>
            <br />
            <InputDate @bind-Value="tDTO.DatumEnd" />
            <br /> <br />
            <label>Check box for private trip: </label>
            <InputCheckbox @bind-Value="tDTO.Private" />
            <br /><br />
            <button type="submit" class="btn btn-success">Add trip</button>
        </EditForm>
    </NewTrip>
    <br />

    @if (added)
    {
        <div class="alert alert-success fade-in" role="alert">
            A new trip was created successfully!
        </div>
    }
    @if (failed)
    {
        <div class="alert alert-danger fade-in" role="alert">
            This is a failed alert—check it out!
        </div>
    }
</div>

@code {
    [Parameter]
    public string? id { get; set; }

    public TripDTO tDTO = new();
    public bool added = false;
    public bool failed = false;

    async Task Save()
    {
        tDTO.TravellerId = id;
        //post a new trip
        var res = await Http.PostAsJsonAsync<TripDTO>($"/api/trip", tDTO);
        if (res.IsSuccessStatusCode)
        {
            added = true;
            Console.WriteLine(res);

        }
        else
        {
            failed = true;
            Console.WriteLine(res);
        }
    }
}
