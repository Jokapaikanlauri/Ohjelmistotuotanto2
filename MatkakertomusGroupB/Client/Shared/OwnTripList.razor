@using MatkakertomusGroupB.Client.Pages;
@using MatkakertomusGroupB.Shared.Models;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MatkakertomusGroupB.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider asp
@inject NavigationManager nav

<h5>Lista matkoistasi, lukumäärä: @trips</h5>
	@if (list != null)
{
	@foreach (TripDTO t in list)
	{
		<div id="@($"privateitem-{t.Private.ToString()}-{t.DatumStart.Value.ToString("yyyy-MM-dd")}-{t.DatumEnd.Value.ToString("yyyy-MM-dd")}")" class="list-item">
			<TripItem TripDTO="@t">
				@if (t.Private)
				{
					<span style="color: darkgoldenrod" class="oi oi-lock-locked" aria-hidden="true" />
					<span> Yksityinen</span>
				}
				else
				{
					<span class="oi oi-lock-unlocked" aria-hidden="true"> Julkinen</span>
				}
				<ul>
					<li><b>Matkan alku:</b> @t.DatumStart.Value.ToString("yyyy-MM-dd")</li>
					<li><b>Matkan loppu:</b> @t.DatumEnd.Value.ToString("yyyy-MM-dd")</li>
					<br />
					<button id="tripManage" class="btn btn-warning" @onclick='()=>nav.NavigateTo($"/trip/edit/{t.TripId}")'>
						<span class="oi oi-book" aria-hidden="true"> Matkan hallintaan</span>
					</button>
					<StoryList TripId="@t.TripId" UserId="@UserId" GroupList=false />
				</ul>
			</TripItem>
		</div>
		<br />
	}
}

@code {
	[Parameter]
	public string? UserId { get; set; }


	private int trips = 0;
	private List<TripDTO>? list = null;

	private async Task GetData()
	{
		//Get list of all own trips with user id
		list = await Http.GetFromJsonAsync<List<TripDTO>>($"/api/trip/traveller/{UserId}");
		if (list != null) trips = list.Count;
	}

	protected override async Task OnInitializedAsync()
	{

		await GetData();
	}

	public async Task RefreshOwnTripList()
	{
		//Get new data
		await GetData();

		// Call StateHasChanged to trigger a re-render
		StateHasChanged();
	}
}
