@using MatkakertomusGroupB.Shared.Models;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MatkakertomusGroupB.Shared
@using System.Net.Http.Headers
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider asp
<head>
    <link href="Pages/Destinations.razor.css" />
</head>
<div class="right">
<NewDestination>
    <div class="addHeader">
        <h4>Add a new destination</h4>
    </div>
    <div class="addDetails">

        <label>Name</label>
        <br />
        <InputText @bind-Value="destination.Name" placeholder="Name.." />
        <br />
        <label>Country</label>
        <br />
        <InputText @bind-Value="destination.Country" placeholder="Country.." />
        <br />
        <label>Municipality</label>
        <br />
        <InputText @bind-Value="destination.Municipality" placeholder="Municipality.." />
        <br />
        <label>Description</label>
        <br />
        <InputText @bind-Value="destination.Description" placeholder="Description.." />
        <br />
        <label>Image</label>
        <InputFile OnChange="@OnInputFileChange" multiple />
        <br />
        <br />

        <button @onclick="()=>addDestination()">Add</button>
    </div>
</NewDestination>
</div>

@code {
    [Parameter]
    public string id { get; set; }

    public Destination destination = new();
    private int maxAllowedFiles = 3;
    private long maxFileSize = 1024 * 1024 * 8; // 8Mt
    private List<string> fileNames = new();
    private List<UploadResult> uploadResults = new();

    async Task addDestination()
    {
        await Http.PostAsJsonAsync<Destination>($"/api/destination", destination);
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        using var content = new MultipartFormDataContent();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            fileNames.Add(file.Name);
            content.Add(
                content: fileContent,
                name: "\"files\"",
                fileName: file.Name);
        }

        var response = await Http.PostAsync("api/File", content);
        var newUploadResults = await response.Content.ReadFromJsonAsync<List<UploadResult>>();

        if (newUploadResults is not null)
        {
            uploadResults = uploadResults.Concat(newUploadResults).ToList();
        }
    }
}
