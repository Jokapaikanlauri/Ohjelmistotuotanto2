@using MatkakertomusGroupB.Shared.Models;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MatkakertomusGroupB.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider asp
@inject NavigationManager nav

<br />


@if (list != null)
{
	if (list.Count != 0)
	{
		<button class="btn btn-success" @onclick=@ShowStories>Show or hide trip stories</button>

		if (showStories)
		{

			@foreach (StoryDTO s in list)
			{
				<StoryItem Story="@s">
					<ul>
						<li>Date: @s.Datum.ToString("yyyy-MM-dd")</li>
						<DestinationInfo destinationId=@s.DestinationId />
						<li>Story: @s.Description</li>
						<button class="btn btn-success" @onclick=@ShowPictures>Show or hide trip pictures</button>
						<button class="btn btn-warning" @onclick='()=>nav.NavigateTo($"/story/edit/{s.StoryId}")'>Edit trip</button>
						@if (showPictures)
						{
							<StoryPictureList storyId=@s.StoryId />
						}
					</ul>
					<br />
				</StoryItem>
			}
		}
		else
		{
			<h6>Current story count: @stories</h6>
		}
	}
	else
	{
		<h6>Current story count: @stories</h6>
	}
}
else
{
	<h6>No Stories could be fetched</h6>
}


@code {
	[Parameter]
	public int? tripId { get; set; }

	private int stories = 0;
	private List<StoryDTO>? list = null;
	private bool showPictures = false;
	public bool showStories = false;


	protected override async Task OnInitializedAsync()
	{
		//Get list stories for a Trip
		list = await Http.GetFromJsonAsync<List<StoryDTO>>($"/api/story/trip/{tripId}");
		if (list != null) stories = list.Count;
	}

	void ShowPictures()
	{
		if (!showPictures) showPictures = true;
		else showPictures = false;
	}

	void ShowStories()
	{
		if (!showStories) showStories = true;
		else showStories = false;
	}

}
